name: Release with GraalVM Native Images

on:
  push:
    branches:
      - test-release # Your test branch
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release type (patch/minor/major)"
        required: false
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.axion.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Axion Release Version
        id: axion
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            ./gradlew release -Prelease.versionIncrementer=${{ github.event.inputs.release_type }}
          else
            ./gradlew release
          fi
          VERSION=$(./gradlew currentVersion -q -Prelease.quiet)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Released version: ${VERSION}"

      - name: Push tags
        run: |
          git push --tags
          git push

  build-native:
    needs: version
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: amd64
            graalvm: "24.0.0"
          - os: windows-latest
            platform: windows
            arch: amd64
            graalvm: "24.0.0"
          - os: macos-latest
            platform: darwin
            arch: amd64
            graalvm: "24.0.0"
          - os: macos-14
            platform: darwin
            arch: aarch64
            graalvm: "24.0.0"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: v${{ needs.version.outputs.version }}

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: "21"
          distribution: "graalvm"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: "true"
          native-image-musl: ${{ matrix.platform == 'linux' }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Build Native Image
        run: |
          if [ "${{ matrix.platform }}" == "windows" ]; then
            ./gradlew nativeCompile
            BINARY_NAME="app-${{ needs.version.outputs.version }}-${{ matrix.platform }}-${{ matrix.arch }}.exe"
            mv build/native/nativeCompile/*.exe $BINARY_NAME
          else
            ./gradlew nativeCompile
            BINARY_NAME="app-${{ needs.version.outputs.version }}-${{ matrix.platform }}-${{ matrix.arch }}"
            mv build/native/nativeCompile/app $BINARY_NAME
            chmod +x $BINARY_NAME
          fi
        shell: bash

      - name: Upload Native Binary
        uses: actions/upload-artifact@v4
        with:
          name: native-binary-${{ matrix.platform }}-${{ matrix.arch }}
          path: app-${{ needs.version.outputs.version }}-${{ matrix.platform }}-${{ matrix.arch }}*

  create-release:
    needs: [version, build-native]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts

      - name: Display structure
        run: ls -la release-artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.version.outputs.version }}
          name: Release v${{ needs.version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            release-artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
