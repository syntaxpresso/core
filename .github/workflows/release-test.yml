name: Release

on:
  pull_request:
    types: [closed] # Run the workflow only when a PR is closed
    branches:
      - "test-release" # Target branch for the PR

# ðŸ”‘ This block is added to grant the workflow permission to push tags.
permissions:
  contents: write

jobs:
  release:
    # This condition ensures the job only runs if the PR was actually merged.
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}
    steps:
      - name: Checkout code
        # Updated to the latest major version
        uses: actions/checkout@v4
        with:
          # Fetch all history for all branches and tags for axion-release-plugin
          fetch-depth: 0

      - name: Set up GraalVM
        # Updated to the latest major version
        uses: actions/setup-java@v4
        with:
          distribution: "graalvm"
          java-version: "24"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Increment version and push tag
        id: versioning
        run: |
          # This logic determines whether to increment the minor or patch version based on PR labels.
          if [[ "${{ contains(github.event.pull_request.labels.*.name, 'feature') }}" == "true" ]]; then
            echo "Incrementing minor version for feature"
            ./gradlew release -Prelease.incrementer=incrementMinor
          elif [[ "${{ contains(github.event.pull_request.labels.*.name, 'bug') }}" == "true" || "${{ contains(github.event.pull_request.labels.*.name, 'task') }}" == "true" ]]; then
            echo "Incrementing patch version for bug/task"
            ./gradlew release -Prelease.incrementer=incrementPatch
          else
            echo "No versioning label found ('feature', 'bug', 'task'). Skipping release."
            exit 0
          fi

      - name: Get the new version
        id: get_version
        # âœ… FIX: Added '| tail -n 1' to filter out the progress bar from the output.
        run: echo "VERSION=$(./gradlew currentVersion -q -Prelease.quiet | tail -n 1)" >> $GITHUB_OUTPUT

  # Build native images for multiple platforms
  build-native:
    needs: release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
            binary_name: core
            output_name: core-linux-x64
          - os: macos-13  # Intel-based macOS runner
            platform: macos
            arch: x64
            binary_name: core
            output_name: core-macos-x64
          - os: macos-latest  # ARM64-based macOS runner (M1/M2)
            platform: macos
            arch: arm64
            binary_name: core
            output_name: core-macos-arm64
          - os: windows-latest
            platform: windows
            arch: x64
            binary_name: core.exe
            output_name: core-windows-x64.exe
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up GraalVM
        uses: actions/setup-java@v4
        with:
          distribution: "graalvm"
          java-version: "24"

      - name: Grant execute permission for gradlew (Unix)
        if: matrix.platform != 'windows'
        run: chmod +x gradlew

      - name: Build native image
        run: ./gradlew nativeCompile

      - name: Rename binary for platform
        run: |
          if [ -f "build/native/nativeCompile/${{ matrix.binary_name }}" ]; then
            mv "build/native/nativeCompile/${{ matrix.binary_name }}" "build/native/nativeCompile/${{ matrix.output_name }}"
            echo "Renamed ${{ matrix.binary_name }} to ${{ matrix.output_name }}"
          else
            echo "Binary ${{ matrix.binary_name }} not found!"
            ls -la build/native/nativeCompile/
            exit 1
          fi
        shell: bash

      - name: Verify renamed binary
        run: |
          if [ -f "build/native/nativeCompile/${{ matrix.output_name }}" ]; then
            echo "Successfully created ${{ matrix.output_name }}"
            ls -la "build/native/nativeCompile/${{ matrix.output_name }}"
          else
            echo "Failed to create ${{ matrix.output_name }}"
            ls -la build/native/nativeCompile/
            exit 1
          fi
        shell: bash

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.platform }}-${{ matrix.arch }}
          path: build/native/nativeCompile/${{ matrix.output_name }}
          retention-days: 1

  # Create the release with all platform binaries
  create-release:
    needs: [release, build-native]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: binaries

      - name: List downloaded files
        run: |
          echo "Contents of binaries directory:"
          ls -la binaries/
          echo ""
          echo "Contents of each subdirectory:"
          for dir in binaries/*/; do
            echo "Contents of $dir:"
            ls -la "$dir"
          done

      - name: Prepare release files
        run: |
          mkdir -p release-files
          cp binaries/binary-linux-x64/core-linux-x64 release-files/ || true
          cp binaries/binary-macos-x64/core-macos-x64 release-files/ || true
          cp binaries/binary-macos-arm64/core-macos-arm64 release-files/ || true
          cp binaries/binary-windows-x64/core-windows-x64.exe release-files/ || true
          echo "Final release files:"
          ls -la release-files/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          # âœ… FIX: Manually add the 'v' prefix to match the Git tag
          tag_name: v${{ needs.release.outputs.version }}
          generate_release_notes: true
          files: release-files/*
